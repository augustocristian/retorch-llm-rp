  @Resource(resID = "LoginService", replaceable = {})
    @AccessMode(resID = "LoginService", concurrency = 10, sharing = true, accessMode = "READONLY")
    @Resource(resID = "OpenVidu", replaceable = {"OpenViduMock"})
    @AccessMode(resID = "OpenVidu", concurrency = 10, sharing = true, accessMode = "NOACCESS")
    @Resource(resID = "Course", replaceable = {"Forum"})
    @AccessMode(resID = "Course", concurrency = 1, sharing = false, accessMode = "READWRITE")
    @ParameterizedTest
    @MethodSource("data")
    void forumNewEntryTest(String mail, String password, String role) {// 48+ 104 +   28 set up +13 lines teardown =193
        this.slowLogin(user, mail, password); //24 lines
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(System.currentTimeMillis());
        int mYear = calendar.get(Calendar.YEAR);
        int mMonth = calendar.get(Calendar.MONTH);
        int mDay = calendar.get(Calendar.DAY_OF_MONTH);
        int mHour = calendar.get(Calendar.HOUR_OF_DAY);
        int mMinute = calendar.get(Calendar.MINUTE);
        int mSecond = calendar.get(Calendar.SECOND);
        log.info("Setting new entry title and content");
        String newEntryTitle = "New Entry Test " + mDay + mMonth + mYear + mHour + mMinute + mSecond;
        String newEntryContent = "This is the content written on the " + mDay + " of " + months[mMonth] + ", " + mHour + ":" + mMinute + "," + mSecond;
        log.info("Navigating to courses tab");
        try {
            log.info("Navigating to courses tab");
            //navigate to courses.
            if (NavigationUtilities.amINotHere(driver, COURSES_URL.replace("__HOST__", HOST))) {
                NavigationUtilities.toCoursesHome(driver);//3lines
            }
            WebElement course = CourseNavigationUtilities.getCourseByName(driver, courseName);//14lines
            log.info("Entering the course List");
            course.findElement(COURSE_LIST_COURSE_TITLE).click();

            Wait.notTooMuch(driver).until(ExpectedConditions.visibilityOfElementLocated(By.id(TABS_DIV_ID)));
            log.info("Entering the Forum");
            CourseNavigationUtilities.go2Tab(driver, FORUM_ICON); //4lines
            assertTrue(ForumNavigationUtilities.isForumEnabled(CourseNavigationUtilities.getTabContent(driver, FORUM_ICON)), "Forum not activated"); //6lines
            Wait.waitForPageLoaded(driver);
            ForumNavigationUtilities.newEntry(driver, newEntryTitle, newEntryContent); //16lines
            //Retorch Modification, this test fails due to the speed of the browser
            Wait.waitForPageLoaded(driver);
            //Check entry... Flake Here
            WebElement newEntry = ForumNavigationUtilities.getEntry(driver, newEntryTitle);//16lines
            Wait.waitForPageLoaded(driver);
            assertEquals(newEntry.findElement(FORUM_ENTRY_LIST_ENTRY_USER).getText(), userName, "Incorrect user");
            Click.element(driver, newEntry.findElement(FORUM_ENTRY_LIST_ENTRY_TITLE));
            Wait.notTooMuch(driver).until(ExpectedConditions.visibilityOfElementLocated(FORUM_COMMENT_LIST));
            WebElement entryTitleRow = driver.findElement(FORUM_COMMENT_LIST_ENTRY_TITLE);
            assertEquals(entryTitleRow.getText().split("\n")[0], newEntryTitle, "Incorrect Entry Title");
            assertEquals(entryTitleRow.findElement(FORUM_COMMENT_LIST_ENTRY_USER).getText(), userName, "Incorrect User for Entry");
            //first comment should be the inserted while creating the entry
            Wait.waitForPageLoaded(driver);
            List<WebElement> comments = ForumNavigationUtilities.getComments(driver);
            assertFalse(comments.size() < 1, "No comments on the entry");
            Wait.notTooMuch(driver).until(ExpectedConditions.visibilityOfElementLocated(FORUM_COMMENT_LIST));
            Wait.waitForPageLoaded(driver);
            WebElement newComment = comments.get(0);
            String commentContent = newComment.findElement(FORUM_COMMENT_LIST_COMMENT_CONTENT).getText();
            assertEquals(commentContent, newEntryContent, "Bad content of comment");
            Wait.waitForPageLoaded(driver);
            String comment = newComment.findElement(FORUM_COMMENT_LIST_COMMENT_USER).getText();
            assertEquals(comment, userName, "Bad user in comment");
        } catch (ElementNotFoundException notFoundException) {
            Assertions.fail("Failed to navigate to course forum:: " + notFoundException.getClass() + ": " + notFoundException.getLocalizedMessage());
        }
        //Fix Flaky test Navigating to the mainpage to logout...
        user.getDriver().get(APP_URL);
    }